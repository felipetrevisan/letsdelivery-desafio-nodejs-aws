service: clients-api

frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  tableName: ${self:service}-${opt:stage, self:provider.stage}
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs22.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'sa-east-1'}
  environment:
    CLIENTS_TABLE: ${self:custom.tableName}
    LOG_LEVEL: ${opt:logLevel, 'info'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt ClientsTable.Arn

functions:
  createClient:
    handler: src/handlers/clients/create.handler
    events:
      - http:
          path: /clients
          method: post
          cors: true
  
  getClient:
    handler: src/handlers/clients/get.handler
    events:
      - http:
          path: /clients/{id}
          method: get
          cors: true
  
  getAllClients:
    handler: src/handlers/clients/getAll.handler
    events:
      - http:
          path: /clients
          method: get
          cors: true
  
  updateClient:
    handler: src/handlers/clients/update.handler
    events:
      - http:
          path: /clients/{id}
          method: put
          cors: true
  
  deleteClient:
    handler: src/handlers/clients/delete.handler
    events:
      - http:
          path: /clients/{id}
          method: delete
          cors: true

resources:
  Resources:
    ClientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        
    # Add API Gateway specific resources if needed
    ApiGatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'