service: node-serverless-desafio-ts

plugins:
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: node22
    platform: node
    concurrency: 10

  isOffline: ${opt:stage, 'dev'} == 'offline'

  serverless-offline:
    httpPort: 4000
    lambdaPort: 4001
    allowCache: true
    noPrependStageInUrl: true
    printOutput: true

  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: false
      convertEmptyValues: true

provider:
  name: aws
  runtime: nodejs22.x
  region: sa-east-1
  memorySize: 512
  timeout: 15
  tracing:
    lambda: true 
  logRetentionInDays: 7
  environment:
    DYNAMODB_TABLE: clients
    IS_OFFLINE: ${self:custom.isOffline, 'false'}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt ClientsTable.Arn

functions:
  client-create:
    handler: src/handlers/clients/create.handler
    description: Create a new client
    memorySize: 512
    timeout: 10
    events:
      - http:
          path: clients
          method: post

  client-get:
    handler: src/handlers/clients/get.handler
    description: Get a single client by ID
    memorySize: 512
    timeout: 10
    events:
      - http:
          path: clients/{id}
          method: get

  client-getAll:
    handler: src/handlers/clients/getAll.handler
    description: Get all clients
    memorySize: 512
    timeout: 10
    events:
      - http:
          path: clients
          method: get

  client-update:
    handler: src/handlers/clients/update.handler
    description: Update a client
    memorySize: 512
    timeout: 10
    events:
      - http:
          path: clients/{id}
          method: put

  client-delete:
    handler: src/handlers/clients/delete.handler
    description: Delete a client
    memorySize: 512
    timeout: 10
    events:
      - http:
          path: clients/{id}
          method: delete

resources:
  Resources:
    ClientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: clients
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
